for (i in 1:30){
J = 500
I = 100
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
# generalized IVCV with L0
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
res_list_ivcv[i] <- fit_ivcv_g
res_list_tsls[i] <- fit_tsls_g
}
tsls_mse <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
ivcv_mse <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
tsls_bias <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
ivcv_bias <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
tibble(ivcv_mse, tsls_mse, ivcv_bias, tsls_bias) %>% kable()
res_list_ivcv <- list()
res_list_tsls <- list()
for (i in 1:30){
J = 500
I = 500
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
# generalized IVCV with L0
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
res_list_ivcv[i] <- fit_ivcv_g
res_list_tsls[i] <- fit_tsls_g
}
tsls_mse <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
ivcv_mse <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
tsls_bias <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
ivcv_bias <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
tibble(ivcv_mse, tsls_mse, ivcv_bias, tsls_bias) %>% kable()
tsls_mse
ivcv_mse
ivcv_bias <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
tibble(ivcv_mse, tsls_mse, ivcv_bias, tsls_bias) %>% kable()
res_list_ivcv <- list()
res_list_tsls <- list()
for (i in 1:100){
J = 500
I = 500
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
# generalized IVCV with L0
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
res_list_ivcv[i] <- fit_ivcv_g
res_list_tsls[i] <- fit_tsls_g
}
tsls_mse <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
ivcv_mse <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
tsls_bias <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
ivcv_bias <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
tibble(ivcv_mse, tsls_mse, ivcv_bias, tsls_bias) %>% kable()
res_list_ivcv <- list()
res_list_tsls <- list()
for (i in 1:100){
J = 500
I = 2000
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
# generalized IVCV with L0
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
res_list_ivcv[i] <- fit_ivcv_g
res_list_tsls[i] <- fit_tsls_g
}
library(MASS)
library(tidyverse)
library(Formula)
library(magrittr)
library(sjPlot)
library(gIVCV)
library(knitr)
select <- dplyr::select
I = 100
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
# generalized IVCV with L0
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
fit_tsls_g
I = 1000
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
data_gIVCVs
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
fit_tsls_g
data_gIVCVs
lfe::felm(y ~ x1 + x2 + x3 + ctrl_id|id, data = data_gIVCVs, )
lfe::felm(y ~ x1 + x2 + x3 + ctrl_id|id, data = data_gIVCVs) %>% summary()
lfe::felm(y ~ x1 + x2 + x3 + ctrl_id, data = data_gIVCVs) %>% summary()
lfe::felm(y ~ x1 + x2 + x3, data = data_gIVCVs) %>% summary()
lfe::felm(y ~ x1 + x2 + x3 + ctrl_id|id, data = data_gIVCVs) %>% summary()
lfe::felm(y ~ x1 + x2 + x3|id, data = data_gIVCVs) %>% summary()
lfe::felm(y ~ x1 + x2 + x3, data = data_gIVCVs) %>% summary()
library(MASS)
library(tidyverse)
library(Formula)
library(magrittr)
library(sjPlot)
library(gIVCV)
library(knitr)
select <- dplyr::select
res_list_ivcv <- list()
res_list_tsls <- list()
J = 500
I = 2000
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
for (i in 1:100){
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
# generalized IVCV with L0
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
res_list_ivcv[i] <- fit_ivcv_g
res_list_tsls[i] <- fit_tsls_g
}
tsls_mse <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
ivcv_mse <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
tsls_bias <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
ivcv_bias <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
tibble(ivcv_mse, tsls_mse, ivcv_bias, tsls_bias) %>% kable()
res_list_ivcv <- list()
res_list_tsls <- list()
J = 200
I = 500
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
for (i in 1:100){
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
# generalized IVCV with L0
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
res_list_ivcv[i] <- fit_ivcv_g
res_list_tsls[i] <- fit_tsls_g
}
tsls_mse <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
ivcv_mse <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
tsls_bias <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
ivcv_bias <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
tibble(ivcv_mse, tsls_mse, ivcv_bias, tsls_bias) %>% kable()
res_list_ivcv <- list()
res_list_tsls <- list()
J = 200
I = 50000
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
for (i in 1:100){
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
# generalized IVCV with L0
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
res_list_ivcv[i] <- fit_ivcv_g
res_list_tsls[i] <- fit_tsls_g
}
tsls_mse <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
ivcv_mse <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3))^2)  %>%
unlist() %>%
mean()
tsls_bias <- res_list_tsls %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
ivcv_bias <- res_list_ivcv %>%
map_dfr(~(.x[-1] - c(.1, .2, .3, .3)))  %>%
unlist() %>%
mean()
tibble(ivcv_mse, tsls_mse, ivcv_bias, tsls_bias) %>% kable()
