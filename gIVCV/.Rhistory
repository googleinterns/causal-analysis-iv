J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>%
mutate(TSLS_coef = pmap(list(data, J),
~gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = sqrt(2/..2) %>%
rep_col(3) %>%
rep_row(..2),
ctrl_sd_y = rep(sqrt(3/..2), ..2),
L0 = F,
data = ..1)$coef[-1])) %>%
mutate(IVCV_coef = pmap(list(data, J), ~gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = sqrt(2/..2) %>%
rep_col(3) %>%
rep_row(..2),
ctrl_sd_y = rep(sqrt(3/..2), ..2),
L0 = T,
data = ..1)$fit$coef[-1]))
crossing(I = 50, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>%
mutate(TSLS_coef = pmap(list(data, J),
~sIVCV(formula = y ~ x1 + x2 + x3 | factor(id),
id = id,
ctrl_id = 1,
L0 = F,
data = ..1)$coef[-1]))
crossing(I = 50, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>%
mutate(TSLS_coef = pmap(list(data, J),
~sIVCV(formula = y ~ x1 + x2 + x3 | factor(id),
id = id,
ctrl_id = 1,
L0 = F,
data = ..1)))
crossing(I = 50, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>%
mutate(TSLS_coef = pmap(list(data, J),
~sIVCV(formula = y ~ x1 + x2 + x3 | factor(id),
id = id,
ctrl_id = 1,
L0 = F, data = ..1)))
crossing(I = 50, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>%
mutate(TSLS_coef = pmap(list(data, J),
~sIVCV(formula = y ~ x1 + x2 + x3 | factor(id),
id = id,
ctrl_id = 1,
L0 = F, data = ..1))) %>% pull(TSLS_coef)
crossing(I = 50, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>%
mutate(TSLS_coef = pmap(list(data, J),
~sIVCV(formula = y ~ x1 + x2 + x3 | factor(id),
id = id,
ctrl_id = 1,
L0 = F, data = ..1)$fit)) %>% pull(TSLS_coef)
# true effect is .1, .2, .3
J = 200
I = 100
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
data_gIVCVs_sd
# true effect is .1, .2, .3
J = 200
I = 1000
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
data_gIVCVs_sd
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = 1000,
summary_data = T)
data_gIVCVs_sd
J
# generalized IVCV with L0
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
# generalized IVCV without L0
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
tab_model(
fit_ivcv_g,
fit_tsls_g,
show.ci = FALSE,
show.se = TRUE,
auto.label = FALSE,
string.se = "SE",
show.icc = TRUE,
show.r2 = FALSE,
show.aic = FALSE,
show.obs = TRUE,
#  bootstrap = TRUE,
title = "True effect is .1, .2, .3, .3, respectively for x1, x2, x3, ctrl_id",
dv.labels = c("gIVCV with summary data",
"TSLS with summary data"),
digits = 5
)
crossing(I = 50, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>%
mutate(TSLS_coef = pmap(list(data, J),
~gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = F,
data = ..1)))
crossing(I = 50, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>%
mutate(TSLS_coef = pmap(list(data, J),
~gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = ..1)))
crossing(I = 30, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>%
mutate(TSLS_coef = pmap(list(data, J),
~gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = ..1)))
crossing(I = 30, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
)))
crossing(I = 30, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>% pull(data)
crossing(I = 30, J = 50) %>%
mutate(data = pmap(list(I, J),
~ sim_gIV(
I = ..1,
J = ..2,
beta_ctrl = .3,
beta_X = c(.1, .2, .3)
))) %>%
mutate(TSLS_coef = map(data,
~gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = .x)))
data_gIVCVs_sd
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
# true effect is .1, .2, .3
J = 500
I = 100
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
data_gIVCVs_sd
rerun_ivcv <- function(){
J = 500
I = 100
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
}
rerun(2, rerun_ivcv)
rerun(2, rerun_ivcv())
rerun_ivcv <- function(){
J = 500
I = 100
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
}
sim_res <- rerun(1, rerun_ivcv())
sim_res
rerun_ivcv <- function(){
J = 500
I = 100
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T)
fit_ivcv_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs)$fit
fit_tsls_g <-
gIVCVs(y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs)
return(list(fit_ivcv_g, fit_tsls_g))
}
sim_res <- rerun(1, rerun_ivcv())
sim_res
rerun_sim <- function() {
J = 500
I = 100
data_gIVCVs <- sim_gIV(
beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T
)
fit_ivcv_g <-
gIVCVs(
y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs
)$fit
fit_tsls_g <-
gIVCVs(
y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs
)
return(list(fit_ivcv_g, fit_tsls_g))
}
sim_res <- rerun(30, rerun_ivcv())
sim_res
sim_res %>% map(~.x$coef)
sim_res %>% map(~.x)
sim_res %>% map(~.xfit)
sim_res %>% map(~.x$fit)
sim_res %>% map(~.x$coeffcicients)
sim_res %>% map(~.x$coef)
sim_res %>% map(~.x$coefficients)
sim_res %>% map(~.x)
sim_res %>% map(~.x$coefficients)
sim_res %>% map(~.x %>% coef)
sim_res %>% map(~.x %>% coef)
sim_res %>% map(coef(.x))
sim_res %>% map(., ~coef(.x))
sim_res
sim_res %>% map(.x)
sim_res %>% map(~.x)
sim_res %>% map(~.x[1])
sim_res %>% map(~.x[[1]])
sim_res %>% map(~.x[[1]]$coefficients)
sim_res %>% map(~.x[[1]]$coefficients[-1])
sim_res %>% map(~.x[[1]]$coefficients[-1]) - c(.1, .2, .3, .3)
sim_res %>% map(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))
sim_res %>% map(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3) %>% `^`(2))
sim_res %>% map(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))
sim_res %>% map(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3) %>% `^`(2))
sim_res %>% map(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))^2
sim_res %>% map(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))
sim_res %>% map_dfr(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))
sim_res %>% map_dfr(~.x[[2]]$coefficients[-1] - c(.1, .2, .3, .3))
sim_res %>% map_dfr(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))
mean(sim_res %>% map_dfr(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3)))
ivcv_mse <- sim_res %>% map_dfr(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3)) %>% mean
ivcv_mse
sim_res %>% map_dfr(~.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))
sim_res %>%
map_dfr(~(.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))^2)
sim_res %>%
map_dfr(~(.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))^2) %>% sum
tsls_mse <- sim_res %>%
map_dfr(~(.x[[2]]$coefficients[-1] - c(.1, .2, .3, .3))^2) %>% sum
ivcv_mse
ivcv_mse <- sim_res %>%
map_dfr(~(.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))^2) %>% sum
ivcv_mse
tsls_mse <- sim_res %>%
map_dfr(~(.x[[2]]$coefficients[-1] - c(.1, .2, .3, .3))^2) %>% sum()
tsls_mse
tibble(ivcv_mse, tsls_mse) %>% kable()
data_gIVCVs <- sim_gIV(beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = F)
data_gIVCVs_sd <-
data_gIVCVs %>%
add_column(var_id = list((1:3))) %>%
unchop(c(var_id, X)) %>%
pivot_wider(names_from = var_id, values_from = X, names_glue = "{.value}{var_id}") %>%
filter(ctrl_id == 0) %>%
group_by(id) %>%
summarise(ctrl_sd_x1 = sd(X1)/sqrt(I),
ctrl_sd_x2 = sd(X2)/sqrt(I),
ctrl_sd_x3 = sd(X3)/sqrt(I),
ctrl_sd_y = sd(Y)/sqrt(I))
rerun_sim <- function() {
J = 200
I = 1000
data_gIVCVs <- sim_gIV(
beta_ctrl = .3,
beta_X = c(.1, .2, .3),
J = J,
I = I,
summary_data = T
)
fit_ivcv_g <-
gIVCVs(
y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
ctrl_sd_x = as.matrix(data_gIVCVs_sd[, 2:4]),
ctrl_sd_y = data_gIVCVs_sd$ctrl_sd_y,
L0 = T,
data = data_gIVCVs
)$fit
fit_tsls_g <-
gIVCVs(
y ~ x1 + x2 + x3,
id = id,
ctrl_id = ctrl_id,
L0 = F,
data = data_gIVCVs
)
return(list(fit_ivcv_g, fit_tsls_g))
}
sim_res <- rerun(30, rerun_ivcv())
ivcv_mse <- sim_res %>%
map_dfr(~(.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))^2) %>% sum()
tsls_mse <- sim_res %>%
map_dfr(~(.x[[2]]$coefficients[-1] - c(.1, .2, .3, .3))^2) %>% sum()
tibble(ivcv_mse, tsls_mse) %>% kable()
sim_res %>%
map_dfr(~(.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))^2) %>% mean()
sim_res %>%
map_dfr(~(.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))^2)
sim_res %>%
map_dfr(~(.x[[1]]$coefficients[-1] - c(.1, .2, .3, .3))^2) %>% unlist() %>% mean()
sim_res %>%
map_dfr(~(.x[[2]]$coefficients[-1] - c(.1, .2, .3, .3))^2) %>% mean()
usethis::use_package("sjPlot")
usethis::use_package("knitr")
devtools::document()
help(gIVCVs)
help(gIVCVs)
help(gIVCVs)
help(gIVCVs)
help(gIVCVs)
help(gIVCVs)
help(sIVCV)
